---
namespace: sonarqube-postgresql

database:
  defines: runnable
  inherits: postgresql/db
  services:
    postgres:
      container: postgres
      port: 5432
      protocol: tcp
  variables:
    postgres_password:
      value: <- `${database-password}`
      type: string
    db_username:
      value: <- `${database-user}`
      type: string
    db_name:
      value: <- `${database-name}`
      type: string
  checks:
    readiness:
      code: exec("postgres", "pg_isready") "accepting connections" contains?
      period: 15
      initialDelay: 15

nginx:
  defines: runnable
  inherits: nginx
  services:
    nginx:
      container: nginx-reverse-proxy
      port: <- `${listen-port}` to-i
      protocol: tcp
      host-port: <- `${listen-port}` to-i
  connections:
    sonarqube:
      runnable: sonarqube-postgresql/sonarqube
      service: sonarqube
  files:
    server-def:
      contents: |
        server {
          listen 0.0.0.0:{{ v "listen-port" }};
          location / {
            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
            proxy_pass http://{{ v "proxy-target-host" }}:9000;
          }
        }
      mode: 511
      path: /opt/bitnami/nginx/conf/server_blocks/reverse_proxy.conf
      container: nginx-reverse-proxy
  containers:
    nginx-reverse-proxy:
      image-tag: <- `${nginx-image}`
      image: docker.io/bitnami/nginx
      ports:
        - <- `0.0.0.0:${listen-port}:${listen-port}/tcp`
      cap-add:
        - CAP_NET_BIND_SERVICE
  depends:
    wait-for:
      runnables:
        - sonarqube-postgresql/sonarqube
      timeout: 30
  variables:
    proxy-target-host:
      value: <- connection-hostname("sonarqube")
      type: string
    listen-port:
      value: <- $nginx-listen-port
      type: string
    server-name:
      value: <- $sonarqube-server-name
      type: string
    nginx-image:
      value: <- $nginx-image-tag
      type: string

sonarqube:
  defines: runnable
  metadata:
    name: sonarqube
    description: SonarQube  is an open-source platform developed by SonarSource for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs, code smells on 17 programming languages.
    tags: self hosted, code quality, code inspection
    website: https://www.sonarqube.org/
    source: https://github.com/SonarSource/sonarqube
    publisher: monk.io
    icon: https://www.sonarqube.org/logos/index/sonarqube-logo.png
  services:
    sonarqube:
      container: sonarqube
      port: 9000
      protocol: tcp
      host-port: 9000
  connections:
    postgres:
      runnable: sonarqube-postgresql/database
      service: postgres
  containers:
    sonarqube:
      image: sonarqube
      image-tag: <- `${SONARQUBE_IMAGE}`
      paths:
        - <- `${monk-volume-path}/sonarqube/data:/opt/sonarqube/data`
        - <- `${monk-volume-path}/sonarqube/extensions:/opt/sonarqube/extensions`
        - <- `${monk-volume-path}/sonarqube/logs:/opt/sonarqube/logs`
      ports:
        - 9000
  depends:
    wait-for:
      runnables:
        - sonarqube-postgresql/database
      timeout: 30
  variables:
    SONAR_JDBC_URL:
      env: SONAR_JDBC_URL
      type: string
      value: <- `jdbc:postgresql://${db-host}:5432/${db-name}`
    db-user:
      env: SONAR_JDBC_USERNAME
      type: string
      value: <- `${database-user}`
    db-password:
      env: SONAR_JDBC_PASSWORD
      type: string
      value: <- `${database-password}`
    db-name:
      type: string
      value: <- `${database-name}`
    db-host:
      type: string
      value: <- connection-hostname("postgres")
    SONARQUBE_IMAGE:
      type: string
      value: <- `${sonarqube-image-tag}`
